{"version":3,"sources":["blog-post.1.md","blog-post.2.md","blog-post.3.md","base/NavMenu.tsx","base/Header.tsx","MainFeaturedPost.tsx","FeaturedPost.tsx","Markdown.tsx","base/Main.tsx","base/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","list","width","fullList","menuButton","NavMenu","props","navSections","classes","sections","React","useState","open","state","setState","toggleDrawer","openSetting","event","type","key","Fragment","IconButton","edge","className","color","aria-label","onClick","Menu","SwipeableDrawer","onClose","onOpen","role","onKeyDown","List","map","section","ListItem","button","title","component","href","ListItemText","primary","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","Header","AppBar","position","Toolbar","variant","Typography","align","noWrap","mainFeaturedPost","backgroundColor","grey","common","white","marginBottom","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainFeaturedPostContent","breakpoints","up","paddingRight","MainFeaturedPost","post","Paper","style","image","display","src","alt","imageText","Grid","container","item","md","gutterBottom","paragraph","description","Link","linkText","card","cardDetails","cardMedia","FeaturedPost","xs","CardActionArea","Card","CardContent","date","Hidden","xsDown","CardMedia","imageTitle","options","overrides","h1","h2","h3","h4","p","a","li","withStyles","listItem","marginTop","Markdown","markdown","typography","body2","Main","posts","Divider","substring","Copyright","Date","getFullYear","footer","background","paper","Footer","Container","maxWidth","mainGrid","url","imgText","featuredPosts","post1","post2","post3","Blog","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.963b0005.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blog-post.1.cb471b9e.md\";","module.exports = __webpack_public_path__ + \"static/media/blog-post.2.cb471b9e.md\";","module.exports = __webpack_public_path__ + \"static/media/blog-post.3.cb471b9e.md\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, SwipeableDrawer, List, ListItem, ListItemText } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons'\n\nconst useStyles = makeStyles({\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n    menuButton: {}\n  });\n\nexport default function NavMenu(props: any) {\n  const classes = useStyles();\n  const { sections } = props;\n  const [state, setState] = React.useState({\n    open: false,\n  });\n\n  const toggleDrawer = (openSetting: any) => (event: any) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, open: openSetting });\n  };\n\n  const list = (navSections: any[]) => (\n    <div\n      className=\"navMenuList\"\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        {navSections.map((section: any) => (\n          <ListItem button key={section.title} component=\"a\" href=\"https://www.google.com\">\n            <ListItemText primary={section.title} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n            <Menu />\n          </IconButton>\n          <SwipeableDrawer\n            open={state['open']}\n            onClose={toggleDrawer(false)}\n            onOpen={toggleDrawer(true)}\n          >\n            {list(sections)}\n          </SwipeableDrawer>\n    </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Button, IconButton } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons'\nimport Typography from '@material-ui/core/Typography';\nimport NavMenu from './NavMenu';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  }\n}));\n\nexport default function Header(props: any) {\n  const classes = useStyles();\n  const { sections, title } = props;\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\" className={classes.toolbarSecondary}>\n          <NavMenu sections={sections}/>\n        </Toolbar>\n      </AppBar>\n      <Toolbar className={classes.toolbar}>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          {title}\n        </Typography>\n      </Toolbar>\n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme: any) => ({\n  mainFeaturedPost: {\n    position: 'relative',\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: 'rgba(0,0,0,.3)',\n  },\n  mainFeaturedPostContent: {\n    position: 'relative',\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(6),\n      paddingRight: 0,\n    },\n  },\n}));\n\nexport default function MainFeaturedPost(props: any) {\n  const classes = useStyles();\n  const { post } = props;\n\n  return (\n    <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${post.image})` }}>\n      {/* Increase the priority of the hero background image */}\n      {<img style={{ display: 'none' }} src={post.image} alt={post.imageText} />}\n      <div className={classes.overlay} />\n      <Grid container>\n        <Grid item md={6}>\n          <div className={classes.mainFeaturedPostContent}>\n            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n              {post.title}\n            </Typography>\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n              {post.description}\n            </Typography>\n            <Link variant=\"subtitle1\" href=\"#\">\n              {post.linkText}\n            </Link>\n          </div>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nMainFeaturedPost.propTypes = {\n  post: PropTypes.object,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst useStyles = makeStyles({\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n});\n\nexport default function FeaturedPost(props: any) {\n  const classes = useStyles();\n  const { post } = props;\n\n  return (\n    <Grid item xs={12} md={6}>\n      <CardActionArea component=\"a\" href=\"#\">\n        <Card className={classes.card}>\n          <div className={classes.cardDetails}>\n            <CardContent>\n              <Typography component=\"h2\" variant=\"h5\">\n                {post.title}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {post.date}\n              </Typography>\n              <Typography variant=\"subtitle1\" paragraph>\n                {post.description}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"primary\">\n                Continue reading...\n              </Typography>\n            </CardContent>\n          </div>\n          <Hidden xsDown>\n            <CardMedia className={classes.cardMedia} image={post.image} title={post.imageTitle} />\n          </Hidden>\n        </Card>\n      </CardActionArea>\n    </Grid>\n  );\n}\n\nFeaturedPost.propTypes = {\n  post: PropTypes.object,\n};","import React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst styles = (theme: any) => ({\n  listItem: {\n    marginTop: theme.spacing(1),\n  },\n});\n\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h5',\n      },\n    },\n    h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\n    h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\n    h4: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'caption', paragraph: true },\n    },\n    p: { component: Typography, props: { paragraph: true } },\n    a: { component: Link },\n    li: {\n      component: withStyles(styles)(({ classes, ...props }: any) => (\n        <li className={classes.listItem}>\n          <Typography component=\"span\" {...props} />\n        </li>\n      )),\n    },\n  },\n};\n\nexport default function Markdown(props: any ) {\n  return <ReactMarkdown options={options} {...props} />;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Markdown from '../Markdown';\n\nconst useStyles = makeStyles((theme: any) => ({\n  markdown: {\n    ...theme.typography.body2,\n    padding: theme.spacing(3, 0),\n  },\n}));\n\nexport default function Main(props: any) {\n  const classes = useStyles();\n  const { posts, title } = props;\n\n  return (\n    <Grid item xs={12} md={8}>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      <Divider />\n      {posts.map((post: any) => (\n        <Markdown className={classes.markdown} key={post.substring(0, 40)}>\n          {post}\n        </Markdown>\n      ))}\n    </Grid>\n  );\n}\n\nMain.propTypes = {\n  posts: PropTypes.array,\n  title: PropTypes.string,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme: any) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nexport default function Footer(props: any) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Header from './base/Header';\nimport MainFeaturedPost from './MainFeaturedPost';\nimport FeaturedPost from './FeaturedPost';\nimport Main from './base/Main';\nimport Footer from './base/Footer';\nimport post1 from './blog-post.1.md';\nimport post2 from './blog-post.2.md';\nimport post3 from './blog-post.3.md';\n\nconst useStyles = makeStyles((theme) => ({\n  mainGrid: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst sections = [\n  { title: 'Blog', url: 'https://google.com' },\n  { title: 'Sandbox', url: '#' },\n];\n\nconst mainFeaturedPost = {\n  title: 'Title of a longer featured blog post',\n  description:\n    \"Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents.\",\n  image: 'https://source.unsplash.com/random',\n  imgText: 'main image description',\n  linkText: 'Continue reading…',\n};\n\nconst featuredPosts = [\n  {\n    title: 'Featured post',\n    date: 'Nov 12',\n    description:\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\n    image: 'https://source.unsplash.com/random',\n    imageText: 'Image Text',\n  },\n  {\n    title: 'Post title',\n    date: 'Nov 11',\n    description:\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\n    image: 'https://source.unsplash.com/random',\n    imageText: 'Image Text',\n  },\n];\n\nconst posts = [post1, post2, post3];\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Header title=\"Base Page\" sections={sections} />\n        <main>\n          <MainFeaturedPost post={mainFeaturedPost} />\n          <Grid container spacing={4}>\n            {featuredPosts.map((post) => (\n              <FeaturedPost key={post.title} post={post} />\n            ))}\n          </Grid>\n          <Grid container spacing={5} className={classes.mainGrid}>\n            <Main title=\"From the firehose\" posts={posts} />\n          </Grid>\n        </main>\n      </Container>\n      <Footer title=\"Footer\" description=\"Something here to give the footer a purpose!\" />\n    </React.Fragment>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}